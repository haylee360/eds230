---
title: "Sobol Homework EDS 230"
auhtor: "Haylee Oyler"
format: html
execute: 
  warning: false
  message: false
---

```{r}
library(sensitivity)
library(tidyverse)
library(gridExtra)
library(purrr)
library(ggpubr)
library(here)
```

### Parameter and Input Uncertainty
`v` - Windspeeds are normally distributed with a mean of 300 cm/s with a standard deviation of 50 cm/s
`height` - For vegetation height assume that height is somewhere between 3.5 and 5.5 m (but any value in that range is equally likely)
`k0` and `kd` - parameters you can assume that they are normally distributed with standard deviation of 1% of their default values

```{r}
source(here("hw4/Catm.R"))

# generate two examples of random number from parameter distributions

np <- 1000
k_o <- rnorm(mean = 0.1, sd = 0.1 * 0.01, n = np)
k_d <- rnorm(mean = 0.7, sd = 0.7 * 0.01, n = np)
v <- rnorm(mean = 300, sd = 50, n = np)
height <- runif(min = 3.5, max = 5.5, n = np)

X1 <- cbind.data.frame(k_o, k_d, v, height = height)

# repeat sampling
k_o <- rnorm(mean = 0.1, sd = 0.1 * 0.01, n = np)
k_d <- rnorm(mean = 0.7, sd = 0.7 * 0.01, n = np)
v <- rnorm(mean = 300, sd = 50, n = np)
height <- runif(min = 3.5, max = 5.5, n = np)

X2 <- cbind.data.frame(k_o, k_d, v, height = height)

# there are different versions of sobol functions that have different approaches for estimating parameters and indices, we use an approach implemented by jansen

sens_Catm_Sobol <- sobolSalt(model = NULL, X1, X2, nboot = 100)


# Take a look at the Sobol generated sensitivity object
# your parameters sets for sensitivity analysis are in X
str(sens_Catm_Sobol)
```


### Sobel Indices

```{r}
# Run model for all parameter sets and assign names
parms <- as.data.frame(sens_Catm_Sobol$X)
colnames(parms) <- colnames(X1)
res <- pmap_dbl(parms, Catm)

# Run sensitivity analysis
sens_Catm_Sobol <- sensitivity::tell(sens_Catm_Sobol, res, res.names = "ga")

# main effect:  partitions variance (main effect without co-variance) - sums approximately to one
row.names(sens_Catm_Sobol$S) <- colnames(parms)
sens_Catm_Sobol$S

# total effect - accounts for parameter interactions
row.names(sens_Catm_Sobol$T) <- colnames(parms)
sens_Catm_Sobol$T

# Both the main effect and total effect can tell us something about how the parameter influences results
print(sens_Catm_Sobol)
```

### Plotting
NEED TO DO THIS FIRST PLOT!! Not sure if the histogram is enough...
Plot conductance estimates in a way that accounts for parameter uncertainty. 
Plot conductance estimates against windspeed use the parameter that is 2nd in terms of total effect on response
```{r}
# graph two most sensitive parameters
both <- cbind.data.frame(parms, gs = sens_Catm_Sobol$y)

# look at overall gs sensitvity to uncertainty
ggplot(both, aes(x = gs)) +
  geom_histogram() +
  geom_vline(xintercept = mean(both$gs), col = "cyan")

# THIS FIRST GRAPH IS THE ONE WE WANT ! 
# look at response of conductance to the two interesting variables
ggplot(both, aes(v, gs, col = height)) +
  geom_point() +
  labs(y = "Conductance (mm/s)", x = "Windspeed")

# look at response of conductance to the two interesting variables
ggplot(both, aes(height, gs, col = v)) +
  geom_point() +
  labs(y = "Conductance (mm/s)", x = "Height")

# look at response of conductance to the two most important variables
ggplot(both, aes(k_d, gs, col = k_o)) +
  geom_point() +
  labs(y = "Conductance (mm/s)", x = "k_d parameter")
# use second most sensitive parameter (using most important as color)
ggplot(both, aes(k_o, gs, col = k_d)) +
  geom_point() +
  labs(y = "Conductance (mm/s)", x = "k_d parameter")
```

### Second Order Indices

```{r}
sens_Catm_Sobol2 <- sobolSalt(model = NULL, X1, X2, nboot = 100, scheme = "B")

parms <- as.data.frame(sens_Catm_Sobol2$X)
colnames(parms) <- colnames(X1)
res <- pmap_dbl(parms, Catm)


sens_Catm_Sobol2 <- sensitivity::tell(sens_Catm_Sobol2, res, res.names = "ga")

# main effect:  partitions variance (main effect without co-variance) - sums approximately to one
row.names(sens_Catm_Sobol2$S) <- colnames(parms)
sens_Catm_Sobol2$S

# total effect - accounts for parameter interactions
row.names(sens_Catm_Sobol2$T) <- colnames(parms)
sens_Catm_Sobol2$T

# second order parameters interaction in controlling sensitivity
# parameters are in order, interactiosn are small here
sens_Catm_Sobol2$S2
```

### Conclusions
Comment on what this tells you about how atmospheric conductance and its sensitivity to variation in windspeed differs in this setting as compared to the setting that we examined in class where windspeed was lower and less variable and vegetation was taller.

In the example we did in class, `kd` (the scalar for zero plane displacement) was the parameter our atmospheric conductance model was most sensitive to. `ko` and `windspeed` were the next most important and they had similar coefficients. `height` was the parameter the model was least sensitive to. 

Now that we've changed the parameters and inputs such that windspeeds are higher and more variable and vegetation is shorter. 
