---
title: "Dynamic ODE model"
author: "Haylee Oyler"
format: 
  html:
    embed-resources: true
execute:
  warning: false
  message: false
---

Consider the following model of forest growth (where forest size in measured ni units of carbon (C)) 

• dC/dt = r * C' for forests where C is below a threshold canopy closure
• dC/dt = g* 1( - C/K) for forests where carbon is at or above the threshold canopy closure
• K is a carrying capacity in units of carbon

The size of the forest (C), Canopy closure threshold and carrying capacity are al ni units of carbon You could think of the canopy closure threshold as the size of the forest at which growth rates change from exponential to linear You can think of r, as early exponential growth rate and gas the linear growth rate once canopy closure has been reached

```{r}
library(tidyverse)
library(deSolve)
library(sensitivity)
library(here)

source(here("hw7/week6/dforestgrowth.R"))
```


### Forest Growth Model

```{r}
# Initial population
Cinitial <- c(C=10)

# Time period over 300 years
simtimes <- seq(from = 1, to = 300)

# List of parameters
parms <- list(r = 0.01,
              g = 2,
              K = 250,
              thresh = 50)

# Run the ODE model
result <- ode(y = Cinitial, times = simtimes, func = dforestgrowth, parms = parms)
```

## Graphing the Forest Growth Model

```{r}
# Graph forest growth over time
ggplot(result, aes(time, C)) +
  geom_line() +
  geom_hline(yintercept = 50, col = "red") +
  labs(y = "Forest Size (Kg carbon)", 
       title = "Forest Growth Model over 300 Years",
       x = "Years")
```

## Sobol Sensitivity Analysis

```{r}
# Set initial population 
Cinitial <- 10

# Create parameter distributions
np <- 2000
K <- rnorm(mean = 250, sd = 25, n = np)
r <- rnorm(mean = 0.01, sd = 0.001, n = np)
g <- rnorm(mean = 0.2, sd = 0.02, n = np)
thresh <- rnorm(mean = 50, sd = 5, n = np)
X1 <- cbind.data.frame(r = r, K = K, g = g, thresh = thresh)
 
# Repeat for second set of samples
np <- 2000
K <- rnorm(mean = 250, sd = 25, n = np)
r <- rnorm(mean = 0.01, sd = 0.001, n = np)
g <- rnorm(mean = 0.2, sd = 0.02, n = np)
thresh <- rnorm(mean = 50, sd = 5, n = np)
X2 <- cbind.data.frame(r = r, K = K, g = g, thresh = thresh)

# Fix any negative values and they are not meaningful
X1 <- X1 %>% map_df(pmax, 0.0)
X2 <- X2 %>% map_df(pmax, 0.0)

# Run the sobol analysis
sens_C <- sobolSalt(model = NULL, X1, X2, nboot = 300)

# Add parameter names
colnames(sens_C$X) <- c("r", "K", "g", "thresh")
head(sens_C$X)
```

```{r}
# Run model for all parameter sets and assign names
parms <- as.data.frame(sens_C$X)
colnames(parms) <- colnames(X1)
res <- pmap_dbl(parms, dforestgrowth)

# Run sensitivity analysis
sens_C <- sensitivity::tell(sens_C, res, res.names = "ga")
sens_C
```

### Plotting Sobol Results

```{r}
# now use pmap as we did before
sens_results <- as.data.frame(sens_C$X) %>% pmap()
# allresults <- as.data.frame(sens_C$X) %>% pmap(Cinitial = Cinitial, simtimes = simtimes, odefunc = dforestgrowth, metricfunc = compute_metrics)

# extract out results from pmap into a data frame
allres <- allresults %>% map_dfr(`[`, c("maxpop", "threshyear"))


# create boxplots
tmp <- allres %>% pivot_longer(cols = everything(), names_to = "metric", values_to = "value")
ggplot(tmp, aes(metric, value, col = metric)) +
  geom_boxplot()
```

